//打包: gradlew -x test clean build 成功后发布:gradlew -x test publish 
//然后登录https://oss.sonatype.org/#stagingRepositories来查看,你的提交在未处理前，是`open`状态，然后点击`Close`按钮;然后等一会点击`Release`来发布

buildscript {
  repositories {
    mavenLocal()
    maven { url "https://plugins.gradle.org/m2/"}
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
  }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'signing' //使用signing plugin做数字签名

//密码,GPG签名信息在此文件里,格式如下
/*
ext.'signing.keyId' = '密钥keyId'
ext.'signing.password' = '密钥password'
ext.'signing.secretKeyRingFile' = '私钥keyRingFile路径'

ext.'sonatypeUsername'='sonatype账号'
ext.'sonatypePassword'='sonatype密码'
*/
apply from: rootDir.canonicalPath + '/.gradle/publish.gradle'   

defaultTasks 'shadowJar'

group = 'com.github.wjw465150'   //Sonatype上的Issue里填写的`Group Id`,可以跟package路径完全不一样
version = "2.11.4"

repositories {
  mavenLocal()
  maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }  //优先使用阿里的镜像  mavenCentral()
  //flatDir(dirs: file('jarsDerectory'))
}


dependencies {
  compile "com.fasterxml.jackson.core:jackson-core:${project.version}"
  compile "com.fasterxml.jackson.core:jackson-annotations:${project.version}"
  compile "com.fasterxml.jackson.core:jackson-databind:${project.version}"
  
  //或者:  compile fileTree(dir: "lib", includes: ["*.jar"])
}

sourceSets {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
  main {
    java {
      srcDirs = ['src']
    }
    resources {
      srcDirs = ['src']
    }
  }
}

javadoc {
  // 防止本地打开中文乱码
  options.addStringOption("charset", "UTF-8")

  failOnError=false
  destinationDir = file("${projectDir}/doc-api")
  title = "${project.name}"
  includes = ['org/wjw/efjson/*']
}

//为项目生成**.jar/**-javadoc.jar/**-sources.jar
task javadocJar(type: Jar, dependsOn: [shadowJar]) {
  from javadoc
  classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

shadowJar {
  baseName = project.name
  classifier = null
  version = project.version

  relocate 'com.fasterxml.jackson', 'org.wjw.efjson.deps.com.fasterxml.jackson'

  exclude 'META-INF/maven/**'
  exclude 'META-INF/LICENSE'
  exclude 'META-INF/NOTICE'

  manifest {
    //<--add
    attributes "Built-By": "wjw465150@gmail.com"
    attributes "Build-Name": "${project.name}"
    attributes "Build-Version": "${project.version}"
  }

  javadoc.execute()

}

publishing {
  // 定义发布什么
  publications {
    mavenJava(MavenPublication) {
      // groupId,artifactId,version，如果不定义，则会按照默认值执行
      groupId = project.group
      artifactId = project.name
      version = project.version

      from components.java
      artifact sourcesJar
      artifact javadocJar

      pom {
        // 构件名称
        // 区别于artifactId，可以理解为artifactName
        name = project.name
        // 构件描述
        description = 'Encapsulates Jackon JSON library, Fast Speed Easy Used Json Lib For java'
        // 构件主页
        url = 'https://github.com/wjw465150/EasyFastJson'
        // 许可证名称和地址
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution = 'Encapsulates Jackon JSON library, Fast Speed Easy Used Json Lib For java'
          }
        }
        // 开发者信息
        developers {
          developer {
            id = 'wjw465150'
            name = 'wjw465150'
            email = 'wjw465150@gmail.com'
          }
        }
        // 版本控制仓库地址
        scm {
          url = "https://github.com/wjw465150/EasyFastJson"
          connection = "https://github.com/wjw465150/EasyFastJson.git"
          developerConnection = "https://github.com/wjw465150/EasyFastJson.git"
        }
      }
    }
  }

  // 定义发布到哪里
  repositories {
    maven {
      url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      credentials {
        // 这里就是之前在issues.sonatype.org注册的账号,这些敏感信息为了防止泄露,我放到了`.gradle/publish.gradle`目录下
        username sonatypeUsername
        password sonatypePassword
      }
    }
  }
}

//为所有的jar包做数字签名
signing {
  sign publishing.publications.mavenJava
}
